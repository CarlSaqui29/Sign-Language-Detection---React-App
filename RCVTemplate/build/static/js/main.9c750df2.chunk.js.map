{"version":3,"sources":["Controls.jsx","utilities.js","App.js","index.js"],"names":["Controls","msg","SpeechSynthesisUtterance","wordList","engList","window","localStorage","setItem","voices","speechSynthesis","getVoices","voice","className","id","onChange","event","dialect","target","value","class","voiceName","map","option","index","key","onClick","voiceNum","word","getItem","console","log","idx","indexOf","text","speak","speechHandler","labelMap","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","pT","App","webcamRef","useRef","canvasRef","runCoco","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","array","getContext","requestAnimationFrame","useEffect","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c750df2.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Controls.css\";\n\nfunction Controls() {\n  const msg = new SpeechSynthesisUtterance();\n\n  // const [items, setItems] = useState(\"\");\n\n  // useEffect(() => {\n  //   const items = localStorage.getItem('word');\n  //   if (items) {\n  //     setItems(items);\n  //   }\n  // }, [items]);\n\n  // init translation word\n  const wordList = [\n    ['Ka-mus-ta', 'sa-lamat', 'Mahal Kita', 'o oh', 'hin dech'],\n    ['hi un-sa-on ni-mo', 'sa-lamat', 'Gi-higug-ma ko ik-aw', 'o oh', 'dil i'],\n    ['kab la-haw', 'Ag-yama-nak unay!', 'A-ya-yaten ka', 'wen', 'ha-an']\n  ];\n\n  const engList = ['Hello', 'Thank You', 'I Love You', 'Yes', 'No'];\n\n  // set default Dialect\n  window.localStorage.setItem('dialect', \"tagalog\");\n\n  // set default voice\n  window.localStorage.setItem('voice', \"Google Bahasa Indonesiaid-ID\");\n  let voices = window.speechSynthesis.getVoices();\n  msg.voice = voices[56];\n\n  const speechHandler = (voiceNum) => {\n    let word = window.localStorage.getItem('word');\n    console.log(word);\n    let voices = window.speechSynthesis.getVoices();\n    let voiceName = window.localStorage.getItem('voice');\n    let dialect = window.localStorage.getItem('dialect');\n    console.log(voiceName);\n    console.log(dialect);\n    // check what voice will use\n    if (voiceName === \"Google Bahasa Indonesiaid-ID\") {\n      voiceNum = 56;\n    } else if (voiceName === \"Google हिन्दीhi-IN\") {\n      voiceNum = 55;\n    } else {\n      voiceNum = 49;\n    }\n    // check what translation dialect will use\n    let idx = 0;\n    idx = engList.indexOf(word);\n    if (dialect === 'tagalog') {   \n      word = wordList[0][idx];\n    } else if (dialect === \"ilocano\") {\n      word = wordList[1][idx];\n    } else {\n      word = wordList[2][idx];\n    }\n    // init speak\n    msg.text = word;\n    msg.voice = voices[voiceNum];\n    window.speechSynthesis.speak(msg);\n  }\n  \n\n  const options = [\"Google Bahasa Indonesiaid-ID\", \"Google हिन्दीhi-IN\", \"Google US Englishen-US\"];\n  const onVoiceOptionChangeHandler = (event) => {\n      let voiceName = event.target.value;\n      window.localStorage.setItem('voice', voiceName);\n  }\n  const onDialectOptionChangeHandler = (event) => {\n    let dialect = event.target.value;\n    window.localStorage.setItem('dialect', dialect);\n  }\n  \n  return (\n    <div className=\"wrapper\">\n      <div className='form'>\n        {/* <div className=\"row\">\n          <label>Detected Sign Language</label>\n          <textarea value={items}>{items}</textarea>\n        </div> */}\n        <div className=\"flex\">\n          <div className=\"col\">\n            <label>Select Dialect</label>\n            <div className=\"outer\">\n              <select id=\"dialect\" onChange={onDialectOptionChangeHandler}>\n                <option value=\"tagalog\">Tagalog</option>\n                <option value=\"ilocano\">Ilocano</option>\n                <option value=\"cebuano\">Cebuano</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"col\">\n            <label>Select Voice</label>\n            <div class=\"outer\">\n              <select id=\"voiceList\" onChange={onVoiceOptionChangeHandler}>\n                 {options.map((option, index) => {\n                    return <option key={index} >\n                        {option}\n                    </option>\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n        <button onClick={() => speechHandler()}>Convert To Speech</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Controls;","// import Controls from './Controls';\n// import React, { Component }  from 'react';\n\n// Define our labelmap\nconst labelMap = {\n    1:{name:'Hello', color:'red'},\n    2:{name:'Thank You', color:'yellow'},\n    3:{name:'I Love You', color:'lime'},\n    4:{name:'Yes', color:'blue'},\n    5:{name:'No', color:'purple'},\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 5\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'         \n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n            let pT = labelMap[text]['name'];\n            window.localStorage.setItem('word', pT);\n        }\n    }\n}\n\n","// Import dependencies\nimport React, { useRef, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport Controls from './Controls';\n// import { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport {drawRect} from \"./utilities\"; \n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network \n    // e.g. const net = await cocossd.load();\n    // https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\n    const net = await tf.loadGraphModel('https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json')\n    \n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const img = tf.browser.fromPixels(video)\n      const resized = tf.image.resizeBilinear(img, [640,480])\n      const casted = resized.cast('int32')\n      const expanded = casted.expandDims(0)\n      const obj = await net.executeAsync(expanded)\n      // console.log(obj)\n\n      const boxes = await obj[1].array()\n      const classes = await obj[2].array()\n      const scores = await obj[4].array()\n      \n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      requestAnimationFrame(()=>{drawRect(boxes[0], classes[0], scores[0], .95, videoWidth, videoHeight, ctx)}); \n\n      tf.dispose(img)\n      tf.dispose(resized)\n      tf.dispose(casted)\n      tf.dispose(expanded)\n      tf.dispose(obj)\n\n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          className=\"Webcam\"\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 533,\n            height: 400,\n          }}\n        />\n\n        <canvas\n          className=\"Canvas\"\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 533,\n            height: 400,\n          }}\n        />\n\n        <Controls />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}